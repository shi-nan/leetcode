给定字符串 J 代表石头中宝石的类型，和字符串 
S代表你拥有的石头。
S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。

J 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此"a"和"A"是不同类型的石头。

示例 1:

输入: J = "aA", S = "aAAbbbb"
输出: 3


1.利用双层循环求解
class Solution {
    public int numJewelsInStones(String J, String S) {
        int result=0;
        for(int i=0;i<J.length();i++){
            String a=J.substring(i,i+1);
             for(int j=0;j<S.length();j++){
                 String b=S.substring(j,j+1);
                 
                     if(a.equals(b)) {
                         result++;
           }
        }
    }
        //J.substring(0,1);
        return result;
                               
        }
 }

2.利用哈希表求解
先把石头的key-value表建立起来
然后在其中查找宝石的key 
得出value
class Solution {
    public int numJewelsInStones(String J, String S) {
        int result=0;
        HashMap<String,Integer> map=new HashMap<String,Integer>();
        for(int i=0;i<S.length();i++){
            String a=S.substring(i,i+1);
            if(map.get(a)==null){
                map.put(a,1);
            }else
                map.put(a,map.get(a)+1);
        }
        
            for(int j=0;j<J.length();j++){
                String b=J.substring(j,j+1);
                if(map.containsKey(b)){
                    result+=map.get(b);
                }
            }
           return result;
        }
    }
    
3. 用数组实现哈希表（不太懂）
class Solution {
    public int numJewelsInStones(String J, String S) {
        char []Jc=J.toCharArray();
        char []Sc=S.toCharArray();
        int []index=new int[150];
        int result=0;
    for(int i=0;i<Sc.length;i++){
      index[Sc[i]]=index[Sc[i]]+1;
                        
    }
        for(int j=0;j<Jc.length;j++){
            char a=Jc[j];
           result+= index[a];
            
        }
        return result;
    }
}
